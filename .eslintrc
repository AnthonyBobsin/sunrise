{
  "parser": "babel-eslint",
  "extends": [
    "airbnb",
    "standard",
    "standard-react"
  ],
  "plugins": [
    "babel",
    "react",
    "promise"
  ],
  "env": {
    "browser" : true
  },
  "globals": {
    "__DEV__"      : false,
    "__SANDBOX__"  : false,
    "__QUALITY__"  : false,
    "__PROD__"     : false,
    "__DEV_PROD__" : false,
    "__TEST__"     : false,
    "__COVERAGE__" : false
  },
  "rules": {
    # http://eslint.org/docs/rules/arrow-body-style
    "arrow-body-style": [0],
    # http://eslint.org/docs/rules/arrow-parens
    "arrow-parens": [2, "always"],
    # http://eslint.org/docs/rules/brace-style
    "brace-style": [1],
    # http://eslint.org/docs/rules/class-methods-use-this
    "class-methods-use-this": [0],
    # http://eslint.org/docs/rules/comma-dangle
    "comma-dangle": [2, {
      "arrays": "never",
      "objects": "never",
      "imports": "never",
      "exports": "never",
      "functions": "ignore"
    }],
    # http://eslint.org/docs/rules/func-names
    "func-names": [0],
    # http://eslint.org/docs/rules/generator-star-spacing
    "generator-star-spacing": [2, {"before": false, "after": true}],
    # http://eslint.org/docs/rules/global-require
    "global-require": [0],
    # https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/extensions.md
    "import/extensions": [1, {
      "json": "always",
      "svg": "always"
    }],
    # https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-extraneous-dependencies.md
    "import/no-extraneous-dependencies": [0],
    # https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-named-as-default.md
    "import/no-named-as-default": [0],
    # https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-named-default.md
    "import/no-named-default": [0],
    # https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/prefer-default-export.md
    "import/prefer-default-export": [0],
    # https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md
    "jsx-a11y/no-static-element-interactions": [0],
    # http://eslint.org/docs/rules/jsx-quotes
    "jsx-quotes": [0],
    # http://eslint.org/docs/rules/max-len
    "max-len": [0],
    # http://eslint.org/docs/rules/no-confusing-arrow
    "no-confusing-arrow": [0],
    # http://eslint.org/docs/rules/no-console
    "no-console": ["error", { allow: ["warn", "error"] }],
    # http://eslint.org/docs/rules/no-else-return
    "no-else-return": [2],
    # http://eslint.org/docs/rules/no-nested-ternary
    "no-nested-ternary": [0],
    # http://eslint.org/docs/rules/no-param-reassign
    "no-param-reassign": [2],
    # http://eslint.org/docs/rules/no-plusplus
    "no-plusplus": [0],
    # http://eslint.org/docs/rules/no-shadow
    "no-shadow": [0],
    # http://eslint.org/docs/rules/no-undef
    "no-undef": [0],
    # http://eslint.org/docs/rules/no-var
    "no-var": [0],
    # http://eslint.org/docs/rules/no-void
    "no-void": [0],
    # http://eslint.org/docs/rules/no-underscore-dangle
    "no-underscore-dangle": [0],
    # http://eslint.org/docs/rules/object-curly-spacing
    "object-curly-spacing": [1],
    # http://eslint.org/docs/rules/object-shorthand
    "object-shorthand": [1],
    # http://eslint.org/docs/rules/quotes
    "quotes": [0],
    # http://eslint.org/docs/rules/semi
    "semi": [1, "always"],
    # http://eslint.org/docs/rules/spaced-comment
    "spaced-comment": [1],
    # http://eslint.org/docs/rules/space-before-function-paren
    "space-before-function-paren": [1, "never"],
    # http://eslint.org/docs/rules/space-before-blocks
    "space-before-blocks": [1],
    # http://eslint.org/docs/rules/indent
    "indent": [1],
    # http://eslint.org/docs/rules/vars-on-top
    "vars-on-top": [1],

    # ------------------------------------- REACT Specific -------------------------------------
    # https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/prefer-stateless-function.md
    "react/prefer-stateless-function": [0],
    # https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/forbid-prop-types.md
    "react/forbid-prop-types": [1, {
      "forbid": [ # This rule encourages prop types that more specifically document their usage.
        'any',
        'array', # use arrayOf instead (https://facebook.github.io/react/docs/typechecking-with-proptypes.html)
        'object' # use shape instead (https://facebook.github.io/react/docs/typechecking-with-proptypes.html)
      ]
    }],
    # https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-find-dom-node.md
    "react/no-find-dom-node": [0],
    # https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-children-prop.md
    "react/no-children-prop": [0],
    # https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-boolean-value.md
    "react/jsx-boolean-value": [2, "always"],
    # https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-filename-extension.md
    "react/jsx-filename-extension": [0],
    # https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-indent.md
    "react/jsx-indent": [0],
    # https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/sort-comp.md
    "react/sort-comp": [2, {
      "order": [
        'static-methods',
        'lifecycle',
        'everything-else',
        'render'
      ],
      "groups": {
        "lifecycle": [
          'displayName',
          'propTypes',
          'contextTypes',
          'childContextTypes',
          'mixins',
          'statics',
          'defaultProps',
          'constructor',
          'getDefaultProps',
          'getInitialState',
          'state',
          'getChildContext',
          'componentWillMount',
          'componentDidMount',
          'componentWillReceiveProps',
          'shouldComponentUpdate',
          'componentWillUpdate',
          'componentDidUpdate',
          'componentWillUnmount'
        ]
      }
    }]
  }
}
